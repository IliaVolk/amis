alter table "Invitation"
   drop constraint FK_INVITATI_CONFIRMAT_MEETING;

alter table "Invitation"
   drop constraint FK_INVITATI_NOTIFICAT_USER;

alter table "Meeting"
   drop constraint FK_MEETING_OWNERSHIP_USER;


drop table "Invitation" cascade constraints;

drop table "Meeting" cascade constraints;

drop table "User" cascade constraints;

create table "Invitation"
(
   "id"                 NUMBER,
   "email"              VARCHAR2(320),
   "status"             VARCHAR2(7),
   constraint PK_INVITATION primary key ("id", "email")
);


create index "Confirmation of participation_" on "Invitation" (
   "id" ASC
);

create table "Meeting"
(
   "title"              VARCHAR2(256)            not null,
   "address"            VARCHAR2(256)            not null,
   "date"               DATE                     not null,
   "id"                 NUMBER GENERATED BY DEFAULT as IDENTITY(START with 1 INCREMENT by 1),
   "email"              VARCHAR2(320)            not null,
   constraint PK_MEETING primary key ("id")
);

create table "User"
(
   "email"              VARCHAR2(320)            not null,
   "name"               VARCHAR2(32),
   constraint PK_USER primary key ("email")
);

alter table "Invitation"
   add constraint FK_INVITATI_CONFIRMAT_MEETING foreign key ("id")
      references "Meeting" ("id");

alter table "Invitation"
   add constraint FK_INVITATI_NOTIFICAT_USER foreign key ("email")
      references "User" ("email");

alter table "Invitation"
   add constraint status_check
   check ("status" in ('accept', 'discard', 'pending'));

alter table "Meeting"
   add constraint FK_MEETING_OWNERSHIP_USER foreign key ("email")
      references "User" ("email");

alter table "Meeting"
   add constraint MEETING_UNIQUENESS UNIQUE ("email", "title", "address");

alter table "Meeting"
   add constraint check_date
   CHECK ("date" > TO_DATE('2017-11-10','YYYY-MM-DD'));

alter table "Meeting"
   add constraint check_title
   check ( LENGTHB("title") > 2);

alter table "Meeting"
   add constraint check_address
   check ( LENGTHB("address") > 2);

ALTER TABLE "User"
   ADD CONSTRAINT check_email
   CHECK ( REGEXP_LIKE ("email", '[a-zA-Z0-9._%-]+@[a-zA-Z0-9._%-]+\.[a-zA-Z]{2,4}'));

ALTER TABLE "User"
   ADD CONSTRAINT check_name
   CHECK (LENGTHB("name") > 2);




CREATE OR REPLACE TRIGGER meeting_insert
  BEFORE INSERT ON "Meeting"
  FOR EACH ROW
BEGIN
  :NEW."date" := SYSDATE;
END;